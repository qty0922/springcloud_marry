server.port=8081
#服务注册中心的配置内容，指定服务注册中心的位置
#eureka.client.service-url.defaultZone=http://127.0.0.1:8080/eureka/

#在 Eureka 开启认证后，客户端注册的配置也要加上认证的用户名和密码信息：
eureka.client.service-url.defaultZone=http://qty:qty@127.0.0.1:8080/eureka/

#需要指明spring.application.name,这个很重要，这在以后的服务与服务之间相互调用一般都是根据这个name
spring.application.name=springcloud-provider

mybatis.type-aliases-package=com.ytc.model
mybatis.mapper-locations=classpath:mapping/mapper/*.xml
mybatis.config-locations=classpath:mapping/confg.xml

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/marry?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
spring.datasource.username=root
spring.datasource.password=123456

#自定义 Eureka 的 InstanceID，格式 ―― 服务名称：服务所在 IP：服务端口
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

#开启健康检查
#需要在 pom.xml 中引入 actuator 的依赖
eureka.client.healthcheck.enabled=true
#表示 Eureka Client 发送心跳给 server 端的频率：默认 30 秒
eureka.instance.lease-renewal-interval-in-seconds=5
#表示 Eureka Server 至上一次收到 client 的心跳之后，等待下一次心跳的超时时间，
#在这个时间内若没收到下一次心跳，则移除该 Instance：默认 90 秒
eureka.instance.lease-expiration-duration-in-seconds=10

#REST API
#定义一个简单的元数据，在属性文件中配置如下：
#查看客户端的一些配置信息：ip，port等；
#格式：IP地址：端口号/eureka/apps/客户端的服务名称
eureka.instance.metadataMap.qty=qty
#例子：
# <metadata>
#<qty>qty</qty>
#<management.port>8081</management.port>
#</metadata>

