#Tomcat端口号
server.port=8080
#名称
spring.application.name=eureka-server
#eureka实例的主机地址
eureka.instance.hostname=127.0.0.1
#通过eureka.client.registerWithEureka：false和fetchRegistry：false来表明自己是一个eureka server.
#是否向服务注册中心注册自己
#由于该应用为注册中心, 所以设置为false, 代表不向注册中心注册自己
eureka.client.register-with-eureka=false
#是否检索服务
#由于注册中心的职责就是维护服务实例, 它并不需要去检索服务, 所以也设置为 false
eureka.client.fetch-registry=false
#服务注册中心的配置内容，指定服务注册中心的位置
eureka.client.serviceurl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
# 测试时关闭自我保护机制，保证不可用服务及时踢出
#eureka.server.enable-self-preservation=false
#eureka.server.eviction-interval-timer-in-ms=2000
#可以通过下面的配置将自我保护模式关闭，这个配置是在 eureka-server 中：
#eureka.server.enableSelfPreservation=false

#添加认证的配置信息
#用户名
spring.security.user.name=qty
#密码
spring.security.user.password=qty

#自定义 Eureka 的 InstanceID，格式 ―― 服务名称：服务所在 IP：服务端口
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

#关闭自我保护和清理间隔
eureka.server.enable-self-preservation=false
# 默认 60000 毫秒，单位：毫秒
eureka.server.eviction-interval-timer-in-ms=5000

#查看客户端的一些配置信息：ip，port等；
#格式：IP地址：端口号/eureka/apps/客户端的服务名称

